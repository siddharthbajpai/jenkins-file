pipeline {
    agent any

    environment {
        // Set environment variables if needed
        TF_VERSION = '1.5.0'  // Specify the Terraform version
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from your repository
                git 'https://github.com/your-repo/your-project.git'
            }
        }

        stage('Terraform Init') {
            steps {
                // Install Terraform if it's not already installed
                script {
                    def terraformHome = tool name: 'terraform', type: 'Terraform'
                    env.PATH = "${terraformHome}/bin:${env.PATH}"
                }
                // Initialize Terraform
                sh 'terraform init'
            }
        }

        stage('Terraform Plan') {
            steps {
                // Run Terraform plan to see changes
                sh 'terraform plan'
            }
        }

        //stage('Terraform Apply') {
        //    steps {
                // Apply Terraform changes (typically you'd want to do this manually or with a confirmation step)
           //     sh 'terraform apply -auto-approve'
         //   }
       // }
   // }

    post {
        always {
            // Archive Terraform plan output
            archiveArtifacts artifacts: '*.tfplan', allowEmptyArchive: true
        }

        success {
            echo 'Terraform was successful!'
        }

        failure {
            echo 'Terraform failed!'
        }
    }
}
